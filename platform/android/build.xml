<?xml version="1.0" ?>
<project name="FBReaderJ" default="package">
	
	<!-- property name="sdk-folder" value="/home/geometer/src/android_sdk_linux_m3-rc37a" / -->
	<property name="sdk-folder" value="/Users/geometer/android-sdk_m5-rc15_mac-x86" />
	<property name="android-tools" value="${sdk-folder}/tools" />
	<property name="project-dir" value="/Users/geometer/src/projects/FBReaderJ" />

<!--
	<property name="sdk-folder" value="/home/grigory/distrib/android_sdk_linux_m3-rc20a" />
	<property name="android-tools" value="/home/grigory/distrib/android_sdk_linux_m3-rc20a/tools" />
	<property name="project-dir" value="/home/grigory/programming/amse/fbreader/java/trunk" />
-->


	<!-- The intermediates directory -->
	<!-- Eclipse uses "bin" for its own output, so we do the same. -->
	<property name="outdir" value="../../bin" />
	<property name="cachedir" value="../../depcache" />

	<!-- Input directories -->
	<property name="resource-dir" value="res" />
	<property name="src.path" value="../../src:src" />

	<!-- Output directories -->
	<property name="outdir-classes" value="${outdir}/classes" />

	<!-- Intermediate files -->
	<property name="dex-file" value="classes.dex" />
	<property name="intermediate-dex" value="${outdir}/${dex-file}" />

	<!-- The final package file to generate -->
	<property name="out-package" value="${outdir}/${ant.project.name}.apk" />

	<!-- Tools -->
	<property name="aapt" value="${android-tools}/aapt" />
	<property name="dx" value="${android-tools}/dx" />
	<property name="adb" value="${android-tools}/adb" />
	<property name="zip" value="zip" />
	<property name="android-jar" value="${sdk-folder}/android.jar" />

	<!-- Rules -->

	<!-- Create the output directories if they don't exist yet. -->
	<target name="dirs">
		<mkdir dir="${outdir}" />
		<mkdir dir="${outdir-classes}" />
	</target>

	<target name="raw-resources">
		<echo>Copying raw resources...</echo>
		<exec executable="${project-dir}/platform/android/create_raw_resources.py" />
	</target>

	<!-- Generate the R.java file for this project's resources. -->
	<target name="resource-src" depends="dirs, raw-resources">
		<echo>Generating R.java...</echo>
		<exec executable="${aapt}" failonerror="true">
			<arg value="compile" />
			<arg value="-m" />
			<arg value="-J" />
			<arg value="src" />
			<arg value="-M" />
			<arg value="AndroidManifest.xml" />
			<arg value="-S" />
			<arg value="${resource-dir}" />
			<arg value="-I" />
			<arg value="${android-jar}" />
		</exec>
	</target>

	<target name="depend" depends="dirs, resource-src">
		<depend srcdir="${src.path}" destdir="${outdir-classes}" cache="${cachedir}" closure="yes">
			<exclude name="org/zlibrary/core/xml/sax/**"/>
		</depend>
	</target>

	<!-- Compile this project's .java files into .class files. -->
	<target name="compile" depends="depend">
		<javac target="1.5" srcdir="${src.path}" destdir="${outdir-classes}" bootclasspath="${android-jar}">
			<exclude name = "org/zlibrary/core/xml/sax/**"/>
		</javac>
	</target>

	<!-- Convert this project's .class files into .dex files. -->
	<target name="dex" depends="compile">
		<exec executable="${dx}" failonerror="true">
			<arg value="-JXmx384M" />
			<arg value="--dex" />
			<arg value="--output=${intermediate-dex}" />
			<arg value="--locals=full" />
			<arg value="--positions=lines" />
			<arg path="${outdir-classes}" />
		</exec>
	</target>

	<target name="package-res">
		<echo>Packaging resources...</echo>
		<exec executable="${aapt}" failonerror="true">
			<arg value="package" />
			<arg value="-f" />
			<arg value="-c" />
			<arg value="-M" />
			<arg value="AndroidManifest.xml" />
			<arg value="-S" />
			<arg value="${resource-dir}" />
			<!-- No assets directory -->
			<arg value="-I" />
			<arg value="${android-jar}" />
			<arg value="${out-package}" />
		</exec>
	</target>

	<!-- Put the project's .class files into the output package file. -->
	<target name="package-java" depends="compile, package-res">
		<echo>Packaging java...</echo>
		<jar destfile="${out-package}" update="true">
			<fileset dir = "${outdir-classes}"/>
		</jar>
	</target>

	<!-- Put the project's .dex files into the output package file. -->
	<target name="package-dex" depends="dex, package-res">
		<echo>Packaging dex...</echo>
		<exec executable="${zip}" failonerror="true">
			<arg value="-qj" />
			<arg value="${out-package}" />
			<arg value="${intermediate-dex}" />
		</exec>
	</target>

	<!-- Create the package file for this project from the sources. -->
	<target name="package" depends="package-dex" />

	<target name="install" depends="package">
		<echo>Installing to emulator...</echo>
		<exec executable="${adb}" failonerror="true">
			<arg value="install"/>
			<arg value="${out-package}"/>
		</exec>
	</target>
</project>
