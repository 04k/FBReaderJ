<?xml version="1.0" encoding="UTF-8"?>
<project name="FBReaderJ" default="help">

    <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
    <property file="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the
         'android' tool to add properties to it.
         This is the place to change some Ant specific build properties.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         For other overridable properties, look at the beginning of the rules
         files in the SDK, at tools/ant/build.xml

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="ant.properties" />

    <!-- if sdk.dir was not set from one of the property file, then
         get it from the ANDROID_HOME env var.
         This must be done before we load project.properties since
         the proguard config can use sdk.dir -->
    <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>

    <!-- The project.properties file is created and updated by the 'android'
         tool, as well as ADT.

         This contains project specific properties such as project target, and library
         dependencies. Lower level build properties are stored in ant.properties
         (or in .classpath for Eclipse projects).

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project'"
            unless="sdk.dir"
            />

    <target name="init" description="Initialization...">
        <fail message="Ant 1.7.0 or higher is required. Please upgrade your ant.">
            <condition>
                <not>
                    <antversion property="ant.version" atleast="1.7.0"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="native" unless="native.libraries.are.uptodate">
        <fail message="Native libraries are not up-to-date. Please run ndk-build manually.">
            <condition>
                <os family="windows" />
            </condition>
        </fail>
        <echo message="Building native libraries..."/>
        <exec executable="${ndk.dir}/ndk-build" />
        <echo message="DONE (Building native libraries)"/>
    </target>

    <target name="check.native.libraries" depends="init">
        <echo message="Checking if native libraries are up-to-date..."/>
        <condition property="native.libraries.are.uptodate" value="true">
            <and>
                <!-- Check if libDeflatingDecompressor exists and is up to date -->
                <available file="./libs/armeabi/libDeflatingDecompressor-v3.so" />
                <uptodate targetfile="libs/armeabi/libDeflatingDecompressor-v3.so">
                    <srcfiles dir="jni/DeflatingDecompressor" includes="**/*.cpp"/>
                </uptodate>
                <!-- Check if libLineBreak exists and is up to date -->
                <available file="./libs/armeabi/libLineBreak-v2.so" />
                <uptodate property="libLineBreak-build-is-not-required" targetfile="libs/armeabi/libLineBreak-v2.so">
                    <srcfiles dir="jni/LineBreak" includes="**/*.cpp,**/*.c,**/*.h"/>
                </uptodate>
                <!-- Check if libNativeFormats exists and is up to date -->
                <available file="./libs/armeabi/libNativeFormats-v3.so" />
                <uptodate property="libNativeFormats-build-is-not-required" targetfile="libs/armeabi/libNativeFormats-v3.so">
                    <srcfiles dir="jni/NativeFormats" includes="**/*.cpp,**/*.c,**/*.h"/>
                </uptodate>
            </and>
        </condition>
        <echo message="DONE (Checking if native libraries are up-to-date)"/>
    </target>

    <target name="resources" depends="init, check.native.libraries">
        <echo message="Cleaning up the 'res/drawable' folder..." />
        <delete dir="res/drawable/">
            <files includes="**"/>
        </delete>
        <echo message="DONE (Cleaning up the 'res/drawable' folder)" />

        <echo message="Copying icons files to 'res/drawable/' folder..." />
        <copy todir="res/drawable" verbose="false" overwrite="true" flatten="true">
            <fileset file="icons/*.png" />
            <fileset dir="icons/" includes="*/*" />
        </copy>
        <echo message="DONE (Copying icons files to 'res/drawable/' folder)" />
    </target>

    <target name="-pre-build" depends="init, resources, native">
    </target>
    <!--
      <target name="-pre-compile">
      </target>

      <target name="-post-compile">
      </target>
    -->
    <target name="clean">
        <echo message="Deleting temporary files..." />
        <delete dir="gen" />
        <delete dir="bin" />
        <delete dir="res/drawable" />
        <delete dir="out" />
        <delete dir="obj" />
        <echo message="DONE (Deleting temporary files)" />
    </target>

    <target name="distclean" depends="clean">
        <echo message="Deleting native libraries..." />
        <delete dir="libs/armeabi" />
        <delete dir="libs/armeabi-v7a" />
        <delete dir="libs/x86" />
        <delete dir="libs/mips" />
        <delete dir="libs/mips-r2" />
        <delete dir="libs/mips-r2-sf" />
        <echo message="DONE (Deleting native libraries)" />
    </target>

    <import file="${sdk.dir}/tools/ant/build.xml" />
</project>
